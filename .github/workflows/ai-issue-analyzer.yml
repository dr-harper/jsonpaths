name: AI Issue Analyzer (Codex)

on:
  issues:
    types: [opened, labeled]
  issue_comment:
    types: [created]

jobs:
  analyze:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issues' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@ai-help'))

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install and Setup Codex
        env:
          CODEX_AUTH_JSON: ${{ secrets.CODEX_AUTH_JSON }}
        run: |
          # Install Codex
          npm install -g @openai/codex

          # Create .codex directory and auth.json
          mkdir -p ~/.codex
          echo "$CODEX_AUTH_JSON" > ~/.codex/auth.json

          # Verify installation
          codex --version

      - name: Analyze Issue with Codex
        run: |
          # Create a temporary analysis prompt file
          cat > issue_analysis.md << 'EOF'
          # GitHub Issue Analysis Request

          You are analyzing a GitHub issue for a React TypeScript JSON navigator application.

          ## Repository Context
          - **Tech Stack**: React 19, TypeScript, Vite, Tailwind CSS, Bootstrap 5
          - **Purpose**: JSON path navigation and multi-language code generation
          - **Key Features**: JSON tree visualization, path extraction, AI assistance, diff checker

          ## Issue Details
          - **Title**: ${{ github.event.issue.title || 'Issue from comment' }}
          - **Body**: ${{ github.event.issue.body || 'No description provided' }}
          - **Number**: ${{ github.event.issue.number }}
          - **Author**: ${{ github.event.issue.user.login || github.event.comment.user.login }}

          ## Analysis Required
          Please provide:
          1. **Issue Type**: (bug/enhancement/question/documentation)
          2. **Severity**: (low/medium/high/critical)
          3. **Root Cause Analysis**: What's likely causing this issue?
          4. **Solution Approach**: Step-by-step fix recommendation
          5. **Files to Modify**: Specific files that need changes
          6. **Code Changes**: Actual code snippets if needed
          7. **Testing Strategy**: How to verify the fix works
          8. **Confidence Level**: (low/medium/high) - how confident are you in this analysis?

          Keep the analysis practical and actionable for a developer to implement.
          EOF

          # Run Codex analysis
          echo "ü§ñ Starting Codex analysis..."
          codex exec --full-auto "Analyze the GitHub issue described in issue_analysis.md and provide a comprehensive technical analysis and solution recommendation" > codex_analysis.txt 2>&1

          # Check if analysis was successful
          if [ $? -eq 0 ] && [ -s codex_analysis.txt ]; then
            echo "‚úÖ Codex analysis completed successfully"
            cat codex_analysis.txt
          else
            echo "‚ùå Codex analysis failed"
            cat codex_analysis.txt
            exit 1
          fi

      - name: Post Analysis Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Read the Codex analysis
            let analysis;
            try {
              analysis = fs.readFileSync('codex_analysis.txt', 'utf8');
            } catch (error) {
              console.error('Failed to read analysis file:', error);
              analysis = '‚ùå **Analysis Failed**: Could not read Codex output file.';
            }

            // Handle different event types
            let issueNumber;
            if (context.eventName === 'issues') {
              issueNumber = context.payload.issue.number;
            } else if (context.eventName === 'issue_comment') {
              issueNumber = context.payload.issue.number;
            } else {
              console.log('Unsupported event type:', context.eventName);
              return;
            }

            // Post analysis as comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `## ü§ñ AI Analysis (OpenAI Codex)

${analysis}

---
*This analysis was generated by OpenAI Codex. Please review and validate before implementing any suggested changes.*`
            });