name: AI Issue Analyzer (Gemini)

on:
  issues:
    types: [opened, labeled]
  issue_comment:
    types: [created]

jobs:
  analyze:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issues' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@ai-help'))

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Analyze Issue with Gemini
        uses: actions/github-script@v7
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        with:
          script: |
            const issueNumber = context.issue.number;
            const issueTitle = context.payload.issue.title;
            const issueBody = context.payload.issue.body || '';

            // Call Gemini API
            const response = await fetch(
              'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=' + process.env.GEMINI_API_KEY,
              {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                  contents: [{
                    parts: [{
                      text: `Analyze this GitHub issue for a React TypeScript JSON navigator app:

                      Title: ${issueTitle}
                      Body: ${issueBody}

                      Provide:
                      1. Issue type (bug/feature/question)
                      2. Potential solution approach
                      3. Confidence level (low/medium/high)
                      4. Files likely needing changes

                      Keep response concise and actionable.`
                    }]
                  }]
                })
              }
            );

            const data = await response.json();
            const analysis = data.candidates[0].content.parts[0].text;

            // Post analysis as comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `## ðŸ¤– AI Analysis (Gemini)\n\n${analysis}\n\n---\n*This is an automated analysis. A human developer will review and implement the fix.*`
            });